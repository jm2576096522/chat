<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:aop="http://www.springframework.org/schema/aop" xmlns:util="http://www.springframework.org/schema/util"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
   	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
	http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
    http://www.springframework.org/schema/util 
    http://www.springframework.org/schema/util/spring-util.xsd">
    
   <!-- 加载db.properties文件中的内容，db.properties文件中key命名要有一定的特殊规则 -->
	<context:property-placeholder location="classpath:jdbc.properties" />

	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
		<!-- 配置SQL慢的标准，执行时间超过slowSqlMillis的就是慢，缺省值为3000，也就是3秒。
        同<property name="connectionProperties" value="druid.stat.slowSqlMillis=5000" /> -->
		<property name="slowSqlMillis" value="10000" />
		<property name="logSlowSql" value="true" />
		<!-- 合并参数相同的SQL 同  <property name="filters" value="mergeStat" />
        或者 <property name="connectionProperties" value="druid.stat.mergeSql=true" /> -->
		<property name="mergeSql" value="true" />
	</bean>
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="filters" value="${jdbc.filters}" />
		<property name="proxyFilters">
			<list>
				<ref bean="stat-filter" />
			</list>
		</property>
		<property name="initialSize" value="${jdbc.initialSize}" />
		<!-- 多个数据源时，配置该属性，标记实用通用的配置模版
        <property name="useGlobalDataSourceStat" value="true" /> -->
	</bean>
	<!-- mybatis文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		 <property name="dataSource" ref="dataSource" /> 
		 <property name="typeAliasesPackage" value="com.yy.im.model" />
		<!-- 自动扫描entity目录，省略Configuration.xml里手工配置 -->
		<property name="configLocation" value="classpath:configs/batis/batis-data.xml"/>

	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.yy.im.*.*.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" /> 
	</bean>

	<!-- 配置事务管理器 -->
	<bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
		
	</bean>

	<!-- 拦截器方式配置事物 -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
		  <tx:method name="save*" propagation="REQUIRED" />
		  <tx:method name="delete*" propagation="REQUIRED" />
		  <tx:method name="edit*" propagation="REQUIRED" />
		  <tx:method name="list*" propagation="REQUIRED" read-only="true" />
		  <tx:method name="get*" propagation="REQUIRED" read-only="true" />
		  <tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut id="transactionPointcut" expression="execution(* com.jm.chat.*.*.service.impl.*.*(..))" />
		<aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice" />
	</aop:config>

</beans>